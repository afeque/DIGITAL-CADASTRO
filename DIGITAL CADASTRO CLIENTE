  <!-- Navigation Bar -->
    <div class="nav-bar">
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            <h1 class="text-xl font-semibold">Cadastro de Clientes</h1>
        </div>
    </div>
    
    <!-- Search Bar -->
    <div class="search-bar">
        <div class="relative">
            <input type="text" id="search-input" placeholder="Buscar cliente..." class="w-full py-2 pl-10 pr-4 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 absolute left-3 top-2.5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
        </div>
    </div>
    
    <!-- Main Content -->
    <div id="main-content" class="p-4 pb-20">
        <!-- Client List View (Default) -->
        <div id="client-list" class="block">
            <div class="client-card bg-white">
                <div class="p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <h3 class="font-semibold text-lg">João Silva</h3>
                            <p class="text-gray-600 text-sm">CPF: 123.456.789-00</p>
                            <p class="text-gray-600 text-sm">joao.silva@email.com</p>
                            <p class="text-gray-600 text-sm">(11) 98765-4321</p>
                        </div>
                        <div class="flex space-x-2">
                            <button class="edit-btn p-2 text-blue-600" data-id="1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                            </button>
                            <button class="delete-btn p-2 text-red-600" data-id="1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="client-card bg-white">
                <div class="p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <h3 class="font-semibold text-lg">Maria Oliveira</h3>
                            <p class="text-gray-600 text-sm">CPF: 987.654.321-00</p>
                            <p class="text-gray-600 text-sm">maria.oliveira@email.com</p>
                            <p class="text-gray-600 text-sm">(11) 91234-5678</p>
                        </div>
                        <div class="flex space-x-2">
                            <button class="edit-btn p-2 text-blue-600" data-id="2">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                            </button>
                            <button class="delete-btn p-2 text-red-600" data-id="2">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="client-card bg-white">
                <div class="p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <h3 class="font-semibold text-lg">Carlos Santos</h3>
                            <p class="text-gray-600 text-sm">CPF: 456.789.123-00</p>
                            <p class="text-gray-600 text-sm">carlos.santos@email.com</p>
                            <p class="text-gray-600 text-sm">(11) 97654-3210</p>
                        </div>
                        <div class="flex space-x-2">
                            <button class="edit-btn p-2 text-blue-600" data-id="3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                            </button>
                            <button class="delete-btn p-2 text-red-600" data-id="3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Client Form (Hidden by default) -->
        <div id="client-form" class="hidden">
            <form id="registration-form" class="space-y-4">
                <input type="hidden" id="client-id">
                
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nome Completo</label>
                    <input type="text" id="name" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="cpf" class="block text-sm font-medium text-gray-700 mb-1">CPF</label>
                    <input type="text" id="cpf" name="cpf" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                    <input type="email" id="email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Telefone</label>
                    <input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="address" class="block text-sm font-medium text-gray-700 mb-1">Endereço</label>
                    <input type="text" id="address" name="address" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="city" class="block text-sm font-medium text-gray-700 mb-1">Cidade</label>
                    <input type="text" id="city" name="city" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div>
                    <label for="state" class="block text-sm font-medium text-gray-700 mb-1">Estado</label>
                    <select id="state" name="state" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">Selecione um estado</option>
                        <option value="AC">Acre</option>
                        <option value="AL">Alagoas</option>
                        <option value="AP">Amapá</option>
                        <option value="AM">Amazonas</option>
                        <option value="BA">Bahia</option>
                        <option value="CE">Ceará</option>
                        <option value="DF">Distrito Federal</option>
                        <option value="ES">Espírito Santo</option>
                        <option value="GO">Goiás</option>
                        <option value="MA">Maranhão</option>
                        <option value="MT">Mato Grosso</option>
                        <option value="MS">Mato Grosso do Sul</option>
                        <option value="MG">Minas Gerais</option>
                        <option value="PA">Pará</option>
                        <option value="PB">Paraíba</option>
                        <option value="PR">Paraná</option>
                        <option value="PE">Pernambuco</option>
                        <option value="PI">Piauí</option>
                        <option value="RJ">Rio de Janeiro</option>
                        <option value="RN">Rio Grande do Norte</option>
                        <option value="RS">Rio Grande do Sul</option>
                        <option value="RO">Rondônia</option>
                        <option value="RR">Roraima</option>
                        <option value="SC">Santa Catarina</option>
                        <option value="SP">São Paulo</option>
                        <option value="SE">Sergipe</option>
                        <option value="TO">Tocantins</option>
                    </select>
                </div>
                
                <div>
                    <label for="zipcode" class="block text-sm font-medium text-gray-700 mb-1">CEP</label>
                    <input type="text" id="zipcode" name="zipcode" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                </div>
                
                <div class="flex space-x-3">
                    <button type="button" id="cancel-btn" class="flex-1 py-2 px-4 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 focus:outline-none">
                        Cancelar
                    </button>
                    <button type="submit" id="save-btn" class="flex-1 py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none">
                        Salvar
                    </button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Floating Action Button -->
    <button id="add-client-btn" class="fab">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
        </svg>
    </button>
    
    <!-- Bottom Navigation -->
    <div class="bottom-nav">
        <div class="nav-item active">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            <span>Clientes</span>
        </div>
        <div class="nav-item">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
            </svg>
            <span>Relatórios</span>
        </div>
        <div class="nav-item">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            <span>Configurações</span>
        </div>
    </div>
</div>

<script>
    // Sample data
    let clients = [
        { id: 1, name: "João Silva", cpf: "123.456.789-00", email: "joao.silva@email.com", phone: "(11) 98765-4321", address: "Rua das Flores, 123", city: "São Paulo", state: "SP", zipcode: "01234-567" },
        { id: 2, name: "Maria Oliveira", cpf: "987.654.321-00", email: "maria.oliveira@email.com", phone: "(11) 91234-5678", address: "Av. Paulista, 1000", city: "São Paulo", state: "SP", zipcode: "04567-890" },
        { id: 3, name: "Carlos Santos", cpf: "456.789.123-00", email: "carlos.santos@email.com", phone: "(11) 97654-3210", address: "Rua Augusta, 500", city: "São Paulo", state: "SP", zipcode: "01234-000" }
    ];
    
    // DOM Elements
    const clientList = document.getElementById('client-list');
    const clientForm = document.getElementById('client-form');
    const addClientBtn = document.getElementById('add-client-btn');
    const cancelBtn = document.getElementById('cancel-btn');
    const saveBtn = document.getElementById('save-btn');
    const registrationForm = document.getElementById('registration-form');
    const searchInput = document.getElementById('search-input');
    
    // Event Listeners
    addClientBtn.addEventListener('click', showAddClientForm);
    cancelBtn.addEventListener('click', showClientList);
    registrationForm.addEventListener('submit', saveClient);
    searchInput.addEventListener('input', searchClients);
    
    // Add event listeners to edit and delete buttons
    document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', () => editClient(parseInt(btn.dataset.id)));
    });
    
    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', () => deleteClient(parseInt(btn.dataset.id)));
    });
    
    // Functions
    function showAddClientForm() {
        // Reset form
        registrationForm.reset();
        document.getElementById('client-id').value = '';
        
        // Show form, hide list
        clientList.classList.add('hidden');
        clientForm.classList.remove('hidden');
    }
    
    function showClientList() {
        // Show list, hide form
        clientForm.classList.add('hidden');
        clientList.classList.remove('hidden');
    }
    
    function editClient(id) {
        // Find client
        const client = clients.find(c => c.id === id);
        if (!client) return;
        
        // Fill form
        document.getElementById('client-id').value = client.id;
        document.getElementById('name').value = client.name;
        document.getElementById('cpf').value = client.cpf;
        document.getElementById('email').value = client.email;
        document.getElementById('phone').value = client.phone;
        document.getElementById('address').value = client.address;
        document.getElementById('city').value = client.city;
        document.getElementById('state').value = client.state;
        document.getElementById('zipcode').value = client.zipcode;
        
        // Show form
        clientList.classList.add('hidden');
        clientForm.classList.remove('hidden');
    }
    
    function deleteClient(id) {
        if (confirm('Tem certeza que deseja excluir este cliente?')) {
            clients = clients.filter(c => c.id !== id);
            renderClientList(clients);
        }
    }
    
    function saveClient(e) {
        e.preventDefault();
        
        const clientId = document.getElementById('client-id').value;
        const name = document.getElementById('name').value;
        const cpf = document.getElementById('cpf').value;
        const email = document.getElementById('email').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('address').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const zipcode = document.getElementById('zipcode').value;
        
        if (!name || !cpf || !email || !phone) {
            alert('Por favor, preencha todos os campos obrigatórios.');
            return;
        }
        
        if (clientId) {
            // Update existing client
            const index = clients.findIndex(c => c.id === parseInt(clientId));
            if (index !== -1) {
                clients[index] = {
                    id: parseInt(clientId),
                    name, cpf, email, phone, address, city, state, zipcode
                };
            }
        } else {
            // Add new client
            const newId = clients.length > 0 ? Math.max(...clients.map(c => c.id)) + 1 : 1;
            clients.push({
                id: newId,
                name, cpf, email, phone, address, city, state, zipcode
            });
        }
        
        // Render updated list and show it
        renderClientList(clients);
        showClientList();
    }
    
    function searchClients() {
        const searchTerm = searchInput.value.toLowerCase();
        const filteredClients = clients.filter(client => 
            client.name.toLowerCase().includes(searchTerm) || 
            client.cpf.includes(searchTerm) || 
            client.email.toLowerCase().includes(searchTerm) ||
            client.phone.includes(searchTerm)
        );
        renderClientList(filteredClients);
    }
    
    function renderClientList(clientsToRender) {
        clientList.innerHTML = '';
        
        clientsToRender.forEach(client => {
            const clientCard = document.createElement('div');
            clientCard.className = 'client-card bg-white';
            clientCard.innerHTML = `
                <div class="p-4">
                    <div class="flex justify-between items-start">
                        <div>
                            <h3 class="font-semibold text-lg">${client.name}</h3>
                            <p class="text-gray-600 text-sm">CPF: ${client.cpf}</p>
                            <p class="text-gray-600 text-sm">${client.email}</p>
                            <p class="text-gray-600 text-sm">${client.phone}</p>
                        </div>
                        <div class="flex space-x-2">
                            <button class="edit-btn p-2 text-blue-600" data-id="${client.id}">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                </svg>
                            </button>
                            <button class="delete-btn p-2 text-red-600" data-id="${client.id}">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            clientList.appendChild(clientCard);
            
            // Add event listeners to new buttons
            const editBtn = clientCard.querySelector('.edit-btn');
            const deleteBtn = clientCard.querySelector('.delete-btn');
            
            editBtn.addEventListener('click', () => editClient(parseInt(editBtn.dataset.id)));
            deleteBtn.addEventListener('click', () => deleteClient(parseInt(deleteBtn.dataset.id)));
        });
        
        if (clientsToRender.length === 0) {
            clientList.innerHTML = `
                <div class="text-center py-8 text-gray-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto mb-3 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <p>Nenhum cliente encontrado</p>
                </div>
            `;
        }
    }
    
    // Format inputs
    const cpfInput = document.getElementById('cpf');
    cpfInput.addEventListener('input', function() {
        let value = this.value.replace(/\D/g, '');
        if (value.length > 11) value = value.slice(0, 11);
        
        if (value.length > 9) {
            this.value = value.replace(/^(\d{3})(\d{3})(\d{3})(\d{2}).*/, '$1.$2.$3-$4');
        } else if (value.length > 6) {
            this.value = value.replace(/^(\d{3})(\d{3})(\d{0,3}).*/, '$1.$2.$3');
        } else if (value.length > 3) {
            this.value = value.replace(/^(\d{3})(\d{0,3}).*/, '$1.$2');
        } else {
            this.value = value;
        }
    });
    
    const phoneInput = document.getElementById('phone');
    phoneInput.addEventListener('input', function() {
        let value = this.value.replace(/\D/g, '');
        if (value.length > 11) value = value.slice(0, 11);
        
        if (value.length > 10) {
            this.value = value.replace(/^(\d{2})(\d{5})(\d{4}).*/, '($1) $2-$3');
        } else if (value.length > 6) {
            this.value = value.replace(/^(\d{2})(\d{4,5})(\d{0,4}).*/, '($1) $2-$3');
        } else if (value.length > 2) {
            this.value = value.replace(/^(\d{2})(\d{0,5}).*/, '($1) $2');
        } else {
            this.value = value;
        }
    });
    
    const zipcodeInput = document.getElementById('zipcode');
    zipcodeInput.addEventListener('input', function() {
        let value = this.value.replace(/\D/g, '');
        if (value.length > 8) value = value.slice(0, 8);
        
        if (value.length > 5) {
            this.value = value.replace(/^(\d{5})(\d{0,3}).*/, '$1-$2');
        } else {
            this.value = value;
        }
    });
</script>
